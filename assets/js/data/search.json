[ { "title": "How to Automatically Register SSH Keys on Startup", "url": "/posts/ssh-agent/", "categories": "homelab, ssh, terminal", "tags": "console, ssh-keygen, ssh-agent, ssh-add, keychain, auto, automatic", "date": "2022-05-30 22:31:00 +0200", "snippet": "Automatically Register SSH Keys on Terminal StartupManaging SSH keys can be tedious if you have to add them manually every time you open a new terminal. This guide explains how to automatically add...", "content": "Automatically Register SSH Keys on Terminal StartupManaging SSH keys can be tedious if you have to add them manually every time you open a new terminal. This guide explains how to automatically add your SSH private keys when you start your terminal, making SSH connections seamless and secure.PrerequisitesFirst, you need to generate an SSH key. There are many encryption options, but here is a simple example that usually works for most cases:ssh-keygen -t rsa -f ~/.ssh/&lt;name_of_key&gt;.key If you only type ssh-keygen -t rsa, you will create a key named id_rsa. This key will automatically be used by SSH, so the following steps are unnecessary for that default key.Manually Adding SSH KeysNormally, to use a custom SSH key, you need to start the SSH agent and add your key manually: Start the SSH agent: eval $(ssh-agent) This will output the process ID of the agent. Add your SSH key to the agent: ssh-add &lt;path-and-filename-of-key&gt; Automatically Adding SSH Keys with KeychainA more convenient way is to use keychain, a manager for ssh-agent that automatically loads your keys and makes them available to all your terminal sessions. Install keychain: sudo apt-get install keychain -y Add the following lines to your shellâ€™s rc file (.bashrc or .zshrc, usually in your home directory): keychain &lt;keyname1&gt; &lt;keyname2&gt; . ~/.keychain/$(uname -n)-sh For example: keychain github.key gitlab.key daKey . ~/.keychain/$(uname -n)-sh Your SSH keys should be stored in the ~/.ssh/ folder for this to work. Restart your terminal. You should see output similar to: * keychain 2.8.5 ~ http://www.funtoo.org * Found existing ssh-agent: 261 * Known ssh key: /home/user/.ssh/key1.key * Known ssh key: /home/user/.ssh/key2.key * Known ssh key: /home/user/.ssh/gitlab * Known ssh key: /home/user/.ssh/bitbucket.key * Known ssh key: /home/user/.ssh/github.key Using the SSH Config FileYou can also specify which key to use for each host by editing your ~/.ssh/config file. This is useful if you use different keys for different services. Example: Use gitlab.key for gitlab.com Host gitlab.com IdentityFile ~/.ssh/gitlab.key Example: Use a different username and key for an internal server Host 192.168.1.* User root IdentityFile ~/.ssh/servers.key For more information, see the official SSH documentation.Summary Generate SSH keys with ssh-keygen. Use ssh-agent and ssh-add to manually add keys, or automate with keychain. Configure per-host keys in ~/.ssh/config for advanced setups. For more details, check the keychain documentation and SSH config manual." } ]
